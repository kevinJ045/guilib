import { WidgetEventTarget } from "../utils/eventtarget";
import Widget from "../widgets/main/Widget";
type styleProp = string | number | (string | number | boolean)[] | boolean;
interface props {
    [key: string]: any;
    accentColor?: styleProp;
    additiveSymbols?: styleProp;
    alignContent?: styleProp;
    alignItems?: styleProp;
    alignSelf?: styleProp;
    alignmentBaseline?: styleProp;
    all?: styleProp;
    animation?: styleProp;
    animationComposition?: styleProp;
    animationDelay?: styleProp;
    animationDirection?: styleProp;
    animationDuration?: styleProp;
    animationFillMode?: styleProp;
    animationIterationCount?: styleProp;
    animationName?: styleProp;
    animationPlayState?: styleProp;
    animationRange?: styleProp;
    animationRangeEnd?: styleProp;
    animationRangeStart?: styleProp;
    animationTimeline?: styleProp;
    animationTimingFunction?: styleProp;
    appRegion?: styleProp;
    appearance?: styleProp;
    ascentOverride?: styleProp;
    aspectRatio?: styleProp;
    backdropFilter?: styleProp;
    backfaceVisibility?: styleProp;
    background?: styleProp;
    backgroundAttachment?: styleProp;
    backgroundBlendMode?: styleProp;
    backgroundClip?: styleProp;
    backgroundColor?: styleProp;
    backgroundImage?: styleProp;
    backgroundOrigin?: styleProp;
    backgroundPosition?: styleProp;
    backgroundPositionX?: styleProp;
    backgroundPositionY?: styleProp;
    backgroundRepeat?: styleProp;
    backgroundRepeatX?: styleProp;
    backgroundRepeatY?: styleProp;
    backgroundSize?: styleProp;
    basePalette?: styleProp;
    baselineShift?: styleProp;
    baselineSource?: styleProp;
    blockSize?: styleProp;
    border?: styleProp;
    borderBlock?: styleProp;
    borderBlockColor?: styleProp;
    borderBlockEnd?: styleProp;
    borderBlockEndColor?: styleProp;
    borderBlockEndStyle?: styleProp;
    borderBlockEndWidth?: styleProp;
    borderBlockStart?: styleProp;
    borderBlockStartColor?: styleProp;
    borderBlockStartStyle?: styleProp;
    borderBlockStartWidth?: styleProp;
    borderBlockStyle?: styleProp;
    borderBlockWidth?: styleProp;
    borderBottom?: styleProp;
    borderBottomColor?: styleProp;
    borderBottomLeftRadius?: styleProp;
    borderBottomRightRadius?: styleProp;
    borderBottomStyle?: styleProp;
    borderBottomWidth?: styleProp;
    borderCollapse?: styleProp;
    borderColor?: styleProp;
    borderEndEndRadius?: styleProp;
    borderEndStartRadius?: styleProp;
    borderImage?: styleProp;
    borderImageOutset?: styleProp;
    borderImageRepeat?: styleProp;
    borderImageSlice?: styleProp;
    borderImageSource?: styleProp;
    borderImageWidth?: styleProp;
    borderInline?: styleProp;
    borderInlineColor?: styleProp;
    borderInlineEnd?: styleProp;
    borderInlineEndColor?: styleProp;
    borderInlineEndStyle?: styleProp;
    borderInlineEndWidth?: styleProp;
    borderInlineStart?: styleProp;
    borderInlineStartColor?: styleProp;
    borderInlineStartStyle?: styleProp;
    borderInlineStartWidth?: styleProp;
    borderInlineStyle?: styleProp;
    borderInlineWidth?: styleProp;
    borderLeft?: styleProp;
    borderLeftColor?: styleProp;
    borderLeftStyle?: styleProp;
    borderLeftWidth?: styleProp;
    borderRadius?: styleProp;
    borderRight?: styleProp;
    borderRightColor?: styleProp;
    borderRightStyle?: styleProp;
    borderRightWidth?: styleProp;
    borderSpacing?: styleProp;
    borderStartEndRadius?: styleProp;
    borderStartStartRadius?: styleProp;
    borderStyle?: styleProp;
    borderTop?: styleProp;
    borderTopColor?: styleProp;
    borderTopLeftRadius?: styleProp;
    borderTopRightRadius?: styleProp;
    borderTopStyle?: styleProp;
    borderTopWidth?: styleProp;
    borderWidth?: styleProp;
    bottom?: styleProp;
    boxShadow?: styleProp;
    boxSizing?: styleProp;
    breakAfter?: styleProp;
    breakBefore?: styleProp;
    breakInside?: styleProp;
    bufferedRendering?: styleProp;
    captionSide?: styleProp;
    caretColor?: styleProp;
    clear?: styleProp;
    clip?: styleProp;
    clipPath?: styleProp;
    clipRule?: styleProp;
    color?: styleProp;
    colorInterpolation?: styleProp;
    colorInterpolationFilters?: styleProp;
    colorRendering?: styleProp;
    colorScheme?: styleProp;
    columnCount?: styleProp;
    columnFill?: styleProp;
    columnGap?: styleProp;
    columnRule?: styleProp;
    columnRuleColor?: styleProp;
    columnRuleStyle?: styleProp;
    columnRuleWidth?: styleProp;
    columnSpan?: styleProp;
    columnWidth?: styleProp;
    columns?: styleProp;
    contain?: styleProp;
    containIntrinsicBlockSize?: styleProp;
    containIntrinsicHeight?: styleProp;
    containIntrinsicInlineSize?: styleProp;
    containIntrinsicSize?: styleProp;
    containIntrinsicWidth?: styleProp;
    container?: styleProp;
    containerName?: styleProp;
    containerType?: styleProp;
    content?: styleProp;
    contentVisibility?: styleProp;
    counterIncrement?: styleProp;
    counterReset?: styleProp;
    counterSet?: styleProp;
    cursor?: styleProp;
    cx?: styleProp;
    cy?: styleProp;
    d?: styleProp;
    descentOverride?: styleProp;
    direction?: styleProp;
    display?: styleProp;
    dominantBaseline?: styleProp;
    emptyCells?: styleProp;
    fallback?: styleProp;
    fill?: styleProp;
    fillOpacity?: styleProp;
    fillRule?: styleProp;
    filter?: styleProp;
    flex?: styleProp;
    flexBasis?: styleProp;
    flexDirection?: styleProp;
    flexFlow?: styleProp;
    flexGrow?: styleProp;
    flexShrink?: styleProp;
    flexWrap?: styleProp;
    float?: styleProp;
    floodColor?: styleProp;
    floodOpacity?: styleProp;
    font?: styleProp;
    fontDisplay?: styleProp;
    fontFamily?: styleProp;
    fontFeatureSettings?: styleProp;
    fontKerning?: styleProp;
    fontOpticalSizing?: styleProp;
    fontPalette?: styleProp;
    fontSize?: styleProp;
    fontStretch?: styleProp;
    fontStyle?: styleProp;
    fontSynthesis?: styleProp;
    fontSynthesisSmallCaps?: styleProp;
    fontSynthesisStyle?: styleProp;
    fontSynthesisWeight?: styleProp;
    fontVariant?: styleProp;
    fontVariantAlternates?: styleProp;
    fontVariantCaps?: styleProp;
    fontVariantEastAsian?: styleProp;
    fontVariantLigatures?: styleProp;
    fontVariantNumeric?: styleProp;
    fontVariantPosition?: styleProp;
    fontVariationSettings?: styleProp;
    fontWeight?: styleProp;
    forcedColorAdjust?: styleProp;
    gap?: styleProp;
    grid?: styleProp;
    gridArea?: styleProp;
    gridAutoColumns?: styleProp;
    gridAutoFlow?: styleProp;
    gridAutoRows?: styleProp;
    gridColumn?: styleProp;
    gridColumnEnd?: styleProp;
    gridColumnGap?: styleProp;
    gridColumnStart?: styleProp;
    gridGap?: styleProp;
    gridRow?: styleProp;
    gridRowEnd?: styleProp;
    gridRowGap?: styleProp;
    gridRowStart?: styleProp;
    gridTemplate?: styleProp;
    gridTemplateAreas?: styleProp;
    gridTemplateColumns?: styleProp;
    gridTemplateRows?: styleProp;
    height?: styleProp;
    hyphenateCharacter?: styleProp;
    hyphenateLimitChars?: styleProp;
    hyphens?: styleProp;
    imageOrientation?: styleProp;
    imageRendering?: styleProp;
    inherits?: styleProp;
    initialLetter?: styleProp;
    initialValue?: styleProp;
    inlineSize?: styleProp;
    inset?: styleProp;
    insetBlock?: styleProp;
    insetBlockEnd?: styleProp;
    insetBlockStart?: styleProp;
    insetInline?: styleProp;
    insetInlineEnd?: styleProp;
    insetInlineStart?: styleProp;
    isolation?: styleProp;
    justifyContent?: styleProp;
    justifyItems?: styleProp;
    justifySelf?: styleProp;
    left?: styleProp;
    letterSpacing?: styleProp;
    lightingColor?: styleProp;
    lineBreak?: styleProp;
    lineGapOverride?: styleProp;
    lineHeight?: styleProp;
    listStyle?: styleProp;
    listStyleImage?: styleProp;
    listStylePosition?: styleProp;
    listStyleType?: styleProp;
    margin?: styleProp;
    marginBlock?: styleProp;
    marginBlockEnd?: styleProp;
    marginBlockStart?: styleProp;
    marginBottom?: styleProp;
    marginInline?: styleProp;
    marginInlineEnd?: styleProp;
    marginInlineStart?: styleProp;
    marginLeft?: styleProp;
    marginRight?: styleProp;
    marginTop?: styleProp;
    marker?: styleProp;
    markerEnd?: styleProp;
    markerMid?: styleProp;
    markerStart?: styleProp;
    mask?: styleProp;
    maskType?: styleProp;
    mathDepth?: styleProp;
    mathShift?: styleProp;
    mathStyle?: styleProp;
    maxBlockSize?: styleProp;
    maxHeight?: styleProp;
    maxInlineSize?: styleProp;
    maxWidth?: styleProp;
    minBlockSize?: styleProp;
    minHeight?: styleProp;
    minInlineSize?: styleProp;
    minWidth?: styleProp;
    mixBlendMode?: styleProp;
    negative?: styleProp;
    objectFit?: styleProp;
    objectPosition?: styleProp;
    objectViewBox?: styleProp;
    offset?: styleProp;
    offsetAnchor?: styleProp;
    offsetDistance?: styleProp;
    offsetPath?: styleProp;
    offsetPosition?: styleProp;
    offsetRotate?: styleProp;
    opacity?: styleProp;
    order?: styleProp;
    orphans?: styleProp;
    outline?: styleProp;
    outlineColor?: styleProp;
    outlineOffset?: styleProp;
    outlineStyle?: styleProp;
    outlineWidth?: styleProp;
    overflow?: styleProp;
    overflowAnchor?: styleProp;
    overflowClipMargin?: styleProp;
    overflowWrap?: styleProp;
    overflowX?: styleProp;
    overflowY?: styleProp;
    overlay?: styleProp;
    overrideColors?: styleProp;
    overscrollBehavior?: styleProp;
    overscrollBehaviorBlock?: styleProp;
    overscrollBehaviorInline?: styleProp;
    overscrollBehaviorX?: styleProp;
    overscrollBehaviorY?: styleProp;
    pad?: styleProp;
    padding?: styleProp;
    paddingBlock?: styleProp;
    paddingBlockEnd?: styleProp;
    paddingBlockStart?: styleProp;
    paddingBottom?: styleProp;
    paddingInline?: styleProp;
    paddingInlineEnd?: styleProp;
    paddingInlineStart?: styleProp;
    paddingLeft?: styleProp;
    paddingRight?: styleProp;
    paddingTop?: styleProp;
    page?: styleProp;
    pageBreakAfter?: styleProp;
    pageBreakBefore?: styleProp;
    pageBreakInside?: styleProp;
    pageOrientation?: styleProp;
    paintOrder?: styleProp;
    perspective?: styleProp;
    perspectiveOrigin?: styleProp;
    placeContent?: styleProp;
    placeItems?: styleProp;
    placeSelf?: styleProp;
    pointerEvents?: styleProp;
    position?: styleProp;
    prefix?: styleProp;
    quotes?: styleProp;
    r?: styleProp;
    range?: styleProp;
    resize?: styleProp;
    right?: styleProp;
    rotate?: styleProp;
    rowGap?: styleProp;
    rubyPosition?: styleProp;
    rx?: styleProp;
    ry?: styleProp;
    scale?: styleProp;
    scrollBehavior?: styleProp;
    scrollMargin?: styleProp;
    scrollMarginBlock?: styleProp;
    scrollMarginBlockEnd?: styleProp;
    scrollMarginBlockStart?: styleProp;
    scrollMarginBottom?: styleProp;
    scrollMarginInline?: styleProp;
    scrollMarginInlineEnd?: styleProp;
    scrollMarginInlineStart?: styleProp;
    scrollMarginLeft?: styleProp;
    scrollMarginRight?: styleProp;
    scrollMarginTop?: styleProp;
    scrollPadding?: styleProp;
    scrollPaddingBlock?: styleProp;
    scrollPaddingBlockEnd?: styleProp;
    scrollPaddingBlockStart?: styleProp;
    scrollPaddingBottom?: styleProp;
    scrollPaddingInline?: styleProp;
    scrollPaddingInlineEnd?: styleProp;
    scrollPaddingInlineStart?: styleProp;
    scrollPaddingLeft?: styleProp;
    scrollPaddingRight?: styleProp;
    scrollPaddingTop?: styleProp;
    scrollSnapAlign?: styleProp;
    scrollSnapStop?: styleProp;
    scrollSnapType?: styleProp;
    scrollTimeline?: styleProp;
    scrollTimelineAxis?: styleProp;
    scrollTimelineName?: styleProp;
    scrollbarGutter?: styleProp;
    shapeImageThreshold?: styleProp;
    shapeMargin?: styleProp;
    shapeOutside?: styleProp;
    shapeRendering?: styleProp;
    size?: styleProp;
    sizeAdjust?: styleProp;
    speak?: styleProp;
    speakAs?: styleProp;
    src?: styleProp;
    stopColor?: styleProp;
    stopOpacity?: styleProp;
    stroke?: styleProp;
    strokeDasharray?: styleProp;
    strokeDashoffset?: styleProp;
    strokeLinecap?: styleProp;
    strokeLinejoin?: styleProp;
    strokeMiterlimit?: styleProp;
    strokeOpacity?: styleProp;
    strokeWidth?: styleProp;
    suffix?: styleProp;
    symbols?: styleProp;
    syntax?: styleProp;
    system?: styleProp;
    tabSize?: styleProp;
    tableLayout?: styleProp;
    textAlign?: styleProp;
    textAlignLast?: styleProp;
    textAnchor?: styleProp;
    textCombineUpright?: styleProp;
    textDecoration?: styleProp;
    textDecorationColor?: styleProp;
    textDecorationLine?: styleProp;
    textDecorationSkipInk?: styleProp;
    textDecorationStyle?: styleProp;
    textDecorationThickness?: styleProp;
    textEmphasis?: styleProp;
    textEmphasisColor?: styleProp;
    textEmphasisPosition?: styleProp;
    textEmphasisStyle?: styleProp;
    textIndent?: styleProp;
    textOrientation?: styleProp;
    textOverflow?: styleProp;
    textRendering?: styleProp;
    textShadow?: styleProp;
    textSizeAdjust?: styleProp;
    textTransform?: styleProp;
    textUnderlineOffset?: styleProp;
    textUnderlinePosition?: styleProp;
    textWrap?: styleProp;
    timelineScope?: styleProp;
    top?: styleProp;
    touchAction?: styleProp;
    transform?: styleProp;
    transformBox?: styleProp;
    transformOrigin?: styleProp;
    transformStyle?: styleProp;
    transition?: styleProp;
    transitionBehavior?: styleProp;
    transitionDelay?: styleProp;
    transitionDuration?: styleProp;
    transitionProperty?: styleProp;
    transitionTimingFunction?: styleProp;
    translate?: styleProp;
    unicodeBidi?: styleProp;
    unicodeRange?: styleProp;
    userSelect?: styleProp;
    vectorEffect?: styleProp;
    verticalAlign?: styleProp;
    viewTimeline?: styleProp;
    viewTimelineAxis?: styleProp;
    viewTimelineInset?: styleProp;
    viewTimelineName?: styleProp;
    viewTransitionName?: styleProp;
    visibility?: styleProp;
    webkitAlignContent?: styleProp;
    webkitAlignItems?: styleProp;
    webkitAlignSelf?: styleProp;
    webkitAnimation?: styleProp;
    webkitAnimationDelay?: styleProp;
    webkitAnimationDirection?: styleProp;
    webkitAnimationDuration?: styleProp;
    webkitAnimationFillMode?: styleProp;
    webkitAnimationIterationCount?: styleProp;
    webkitAnimationName?: styleProp;
    webkitAnimationPlayState?: styleProp;
    webkitAnimationTimingFunction?: styleProp;
    webkitAppRegion?: styleProp;
    webkitAppearance?: styleProp;
    webkitBackfaceVisibility?: styleProp;
    webkitBackgroundClip?: styleProp;
    webkitBackgroundOrigin?: styleProp;
    webkitBackgroundSize?: styleProp;
    webkitBorderAfter?: styleProp;
    webkitBorderAfterColor?: styleProp;
    webkitBorderAfterStyle?: styleProp;
    webkitBorderAfterWidth?: styleProp;
    webkitBorderBefore?: styleProp;
    webkitBorderBeforeColor?: styleProp;
    webkitBorderBeforeStyle?: styleProp;
    webkitBorderBeforeWidth?: styleProp;
    webkitBorderBottomLeftRadius?: styleProp;
    webkitBorderBottomRightRadius?: styleProp;
    webkitBorderEnd?: styleProp;
    webkitBorderEndColor?: styleProp;
    webkitBorderEndStyle?: styleProp;
    webkitBorderEndWidth?: styleProp;
    webkitBorderHorizontalSpacing?: styleProp;
    webkitBorderImage?: styleProp;
    webkitBorderRadius?: styleProp;
    webkitBorderStart?: styleProp;
    webkitBorderStartColor?: styleProp;
    webkitBorderStartStyle?: styleProp;
    webkitBorderStartWidth?: styleProp;
    webkitBorderTopLeftRadius?: styleProp;
    webkitBorderTopRightRadius?: styleProp;
    webkitBorderVerticalSpacing?: styleProp;
    webkitBoxAlign?: styleProp;
    webkitBoxDecorationBreak?: styleProp;
    webkitBoxDirection?: styleProp;
    webkitBoxFlex?: styleProp;
    webkitBoxOrdinalGroup?: styleProp;
    webkitBoxOrient?: styleProp;
    webkitBoxPack?: styleProp;
    webkitBoxReflect?: styleProp;
    webkitBoxShadow?: styleProp;
    webkitBoxSizing?: styleProp;
    webkitClipPath?: styleProp;
    webkitColumnBreakAfter?: styleProp;
    webkitColumnBreakBefore?: styleProp;
    webkitColumnBreakInside?: styleProp;
    webkitColumnCount?: styleProp;
    webkitColumnGap?: styleProp;
    webkitColumnRule?: styleProp;
    webkitColumnRuleColor?: styleProp;
    webkitColumnRuleStyle?: styleProp;
    webkitColumnRuleWidth?: styleProp;
    webkitColumnSpan?: styleProp;
    webkitColumnWidth?: styleProp;
    webkitColumns?: styleProp;
    webkitFilter?: styleProp;
    webkitFlex?: styleProp;
    webkitFlexBasis?: styleProp;
    webkitFlexDirection?: styleProp;
    webkitFlexFlow?: styleProp;
    webkitFlexGrow?: styleProp;
    webkitFlexShrink?: styleProp;
    webkitFlexWrap?: styleProp;
    webkitFontFeatureSettings?: styleProp;
    webkitFontSmoothing?: styleProp;
    webkitHyphenateCharacter?: styleProp;
    webkitJustifyContent?: styleProp;
    webkitLineBreak?: styleProp;
    webkitLineClamp?: styleProp;
    webkitLocale?: styleProp;
    webkitLogicalHeight?: styleProp;
    webkitLogicalWidth?: styleProp;
    webkitMarginAfter?: styleProp;
    webkitMarginBefore?: styleProp;
    webkitMarginEnd?: styleProp;
    webkitMarginStart?: styleProp;
    webkitMask?: styleProp;
    webkitMaskBoxImage?: styleProp;
    webkitMaskBoxImageOutset?: styleProp;
    webkitMaskBoxImageRepeat?: styleProp;
    webkitMaskBoxImageSlice?: styleProp;
    webkitMaskBoxImageSource?: styleProp;
    webkitMaskBoxImageWidth?: styleProp;
    webkitMaskClip?: styleProp;
    webkitMaskComposite?: styleProp;
    webkitMaskImage?: styleProp;
    webkitMaskOrigin?: styleProp;
    webkitMaskPosition?: styleProp;
    webkitMaskPositionX?: styleProp;
    webkitMaskPositionY?: styleProp;
    webkitMaskRepeat?: styleProp;
    webkitMaskRepeatX?: styleProp;
    webkitMaskRepeatY?: styleProp;
    webkitMaskSize?: styleProp;
    webkitMaxLogicalHeight?: styleProp;
    webkitMaxLogicalWidth?: styleProp;
    webkitMinLogicalHeight?: styleProp;
    webkitMinLogicalWidth?: styleProp;
    webkitOpacity?: styleProp;
    webkitOrder?: styleProp;
    webkitPaddingAfter?: styleProp;
    webkitPaddingBefore?: styleProp;
    webkitPaddingEnd?: styleProp;
    webkitPaddingStart?: styleProp;
    webkitPerspective?: styleProp;
    webkitPerspectiveOrigin?: styleProp;
    webkitPerspectiveOriginX?: styleProp;
    webkitPerspectiveOriginY?: styleProp;
    webkitPrintColorAdjust?: styleProp;
    webkitRtlOrdering?: styleProp;
    webkitRubyPosition?: styleProp;
    webkitShapeImageThreshold?: styleProp;
    webkitShapeMargin?: styleProp;
    webkitShapeOutside?: styleProp;
    webkitTapHighlightColor?: styleProp;
    webkitTextCombine?: styleProp;
    webkitTextDecorationsInEffect?: styleProp;
    webkitTextEmphasis?: styleProp;
    webkitTextEmphasisColor?: styleProp;
    webkitTextEmphasisPosition?: styleProp;
    webkitTextEmphasisStyle?: styleProp;
    webkitTextFillColor?: styleProp;
    webkitTextOrientation?: styleProp;
    webkitTextSecurity?: styleProp;
    webkitTextSizeAdjust?: styleProp;
    webkitTextStroke?: styleProp;
    webkitTextStrokeColor?: styleProp;
    webkitTextStrokeWidth?: styleProp;
    webkitTransform?: styleProp;
    webkitTransformOrigin?: styleProp;
    webkitTransformOriginX?: styleProp;
    webkitTransformOriginY?: styleProp;
    webkitTransformOriginZ?: styleProp;
    webkitTransformStyle?: styleProp;
    webkitTransition?: styleProp;
    webkitTransitionDelay?: styleProp;
    webkitTransitionDuration?: styleProp;
    webkitTransitionProperty?: styleProp;
    webkitTransitionTimingFunction?: styleProp;
    webkitUserDrag?: styleProp;
    webkitUserModify?: styleProp;
    webkitUserSelect?: styleProp;
    webkitWritingMode?: styleProp;
    whiteSpace?: styleProp;
    whiteSpaceCollapse?: styleProp;
    widows?: styleProp;
    width?: styleProp;
    willChange?: styleProp;
    wordBreak?: styleProp;
    wordSpacing?: styleProp;
    wordWrap?: styleProp;
    writingMode?: styleProp;
    x?: styleProp;
    y?: styleProp;
    zIndex?: styleProp;
    zoom?: styleProp;
}
export interface StyleEvent extends CustomEvent<{}> {
}
declare class Style<variableMap = Record<string, any>> extends WidgetEventTarget<StyleEvent, props> {
    name: string;
    values: variableMap;
    constructor(name: string | props | null, map?: props | null);
    addProperty(prop: string, value: any): void;
    get all(): any;
    set all(all: any);
    set(all: Record<string, any>): void;
    set accentColor(value: any);
    get accentColor(): any;
    setAccentColor(value: any): this;
    set additiveSymbols(value: any);
    get additiveSymbols(): any;
    setAdditiveSymbols(value: any): this;
    set alignContent(value: any);
    get alignContent(): any;
    setAlignContent(value: any): this;
    set alignItems(value: any);
    get alignItems(): any;
    setAlignItems(value: any): this;
    set alignSelf(value: any);
    get alignSelf(): any;
    setAlignSelf(value: any): this;
    set alignmentBaseline(value: any);
    get alignmentBaseline(): any;
    setAlignmentBaseline(value: any): this;
    set animation(value: any);
    get animation(): any;
    setAnimation(value: any): this;
    set animationComposition(value: any);
    get animationComposition(): any;
    setAnimationComposition(value: any): this;
    set animationDelay(value: any);
    get animationDelay(): any;
    setAnimationDelay(value: any): this;
    set animationDirection(value: any);
    get animationDirection(): any;
    setAnimationDirection(value: any): this;
    set animationDuration(value: any);
    get animationDuration(): any;
    setAnimationDuration(value: any): this;
    set animationFillMode(value: any);
    get animationFillMode(): any;
    setAnimationFillMode(value: any): this;
    set animationIterationCount(value: any);
    get animationIterationCount(): any;
    setAnimationIterationCount(value: any): this;
    set animationName(value: any);
    get animationName(): any;
    setAnimationName(value: any): this;
    set animationPlayState(value: any);
    get animationPlayState(): any;
    setAnimationPlayState(value: any): this;
    set animationRange(value: any);
    get animationRange(): any;
    setAnimationRange(value: any): this;
    set animationRangeEnd(value: any);
    get animationRangeEnd(): any;
    setAnimationRangeEnd(value: any): this;
    set animationRangeStart(value: any);
    get animationRangeStart(): any;
    setAnimationRangeStart(value: any): this;
    set animationTimeline(value: any);
    get animationTimeline(): any;
    setAnimationTimeline(value: any): this;
    set animationTimingFunction(value: any);
    get animationTimingFunction(): any;
    setAnimationTimingFunction(value: any): this;
    set appRegion(value: any);
    get appRegion(): any;
    setAppRegion(value: any): this;
    set appearance(value: any);
    get appearance(): any;
    setAppearance(value: any): this;
    set ascentOverride(value: any);
    get ascentOverride(): any;
    setAscentOverride(value: any): this;
    set aspectRatio(value: any);
    get aspectRatio(): any;
    setAspectRatio(value: any): this;
    set backdropFilter(value: any);
    get backdropFilter(): any;
    setBackdropFilter(value: any): this;
    set backfaceVisibility(value: any);
    get backfaceVisibility(): any;
    setBackfaceVisibility(value: any): this;
    set background(value: any);
    get background(): any;
    setBackground(value: any): this;
    set backgroundAttachment(value: any);
    get backgroundAttachment(): any;
    setBackgroundAttachment(value: any): this;
    set backgroundBlendMode(value: any);
    get backgroundBlendMode(): any;
    setBackgroundBlendMode(value: any): this;
    set backgroundClip(value: any);
    get backgroundClip(): any;
    setBackgroundClip(value: any): this;
    set backgroundColor(value: any);
    get backgroundColor(): any;
    setBackgroundColor(value: any): this;
    set backgroundImage(value: any);
    get backgroundImage(): any;
    setBackgroundImage(value: any): this;
    set backgroundOrigin(value: any);
    get backgroundOrigin(): any;
    setBackgroundOrigin(value: any): this;
    set backgroundPosition(value: any);
    get backgroundPosition(): any;
    setBackgroundPosition(value: any): this;
    set backgroundPositionX(value: any);
    get backgroundPositionX(): any;
    setBackgroundPositionX(value: any): this;
    set backgroundPositionY(value: any);
    get backgroundPositionY(): any;
    setBackgroundPositionY(value: any): this;
    set backgroundRepeat(value: any);
    get backgroundRepeat(): any;
    setBackgroundRepeat(value: any): this;
    set backgroundRepeatX(value: any);
    get backgroundRepeatX(): any;
    setBackgroundRepeatX(value: any): this;
    set backgroundRepeatY(value: any);
    get backgroundRepeatY(): any;
    setBackgroundRepeatY(value: any): this;
    set backgroundSize(value: any);
    get backgroundSize(): any;
    setBackgroundSize(value: any): this;
    set basePalette(value: any);
    get basePalette(): any;
    setBasePalette(value: any): this;
    set baselineShift(value: any);
    get baselineShift(): any;
    setBaselineShift(value: any): this;
    set baselineSource(value: any);
    get baselineSource(): any;
    setBaselineSource(value: any): this;
    set blockSize(value: any);
    get blockSize(): any;
    setBlockSize(value: any): this;
    set border(value: any);
    get border(): any;
    setBorder(value: any): this;
    set borderBlock(value: any);
    get borderBlock(): any;
    setBorderBlock(value: any): this;
    set borderBlockColor(value: any);
    get borderBlockColor(): any;
    setBorderBlockColor(value: any): this;
    set borderBlockEnd(value: any);
    get borderBlockEnd(): any;
    setBorderBlockEnd(value: any): this;
    set borderBlockEndColor(value: any);
    get borderBlockEndColor(): any;
    setBorderBlockEndColor(value: any): this;
    set borderBlockEndStyle(value: any);
    get borderBlockEndStyle(): any;
    setBorderBlockEndStyle(value: any): this;
    set borderBlockEndWidth(value: any);
    get borderBlockEndWidth(): any;
    setBorderBlockEndWidth(value: any): this;
    set borderBlockStart(value: any);
    get borderBlockStart(): any;
    setBorderBlockStart(value: any): this;
    set borderBlockStartColor(value: any);
    get borderBlockStartColor(): any;
    setBorderBlockStartColor(value: any): this;
    set borderBlockStartStyle(value: any);
    get borderBlockStartStyle(): any;
    setBorderBlockStartStyle(value: any): this;
    set borderBlockStartWidth(value: any);
    get borderBlockStartWidth(): any;
    setBorderBlockStartWidth(value: any): this;
    set borderBlockStyle(value: any);
    get borderBlockStyle(): any;
    setBorderBlockStyle(value: any): this;
    set borderBlockWidth(value: any);
    get borderBlockWidth(): any;
    setBorderBlockWidth(value: any): this;
    set borderBottom(value: any);
    get borderBottom(): any;
    setBorderBottom(value: any): this;
    set borderBottomColor(value: any);
    get borderBottomColor(): any;
    setBorderBottomColor(value: any): this;
    set borderBottomLeftRadius(value: any);
    get borderBottomLeftRadius(): any;
    setBorderBottomLeftRadius(value: any): this;
    set borderBottomRightRadius(value: any);
    get borderBottomRightRadius(): any;
    setBorderBottomRightRadius(value: any): this;
    set borderBottomStyle(value: any);
    get borderBottomStyle(): any;
    setBorderBottomStyle(value: any): this;
    set borderBottomWidth(value: any);
    get borderBottomWidth(): any;
    setBorderBottomWidth(value: any): this;
    set borderCollapse(value: any);
    get borderCollapse(): any;
    setBorderCollapse(value: any): this;
    set borderColor(value: any);
    get borderColor(): any;
    setBorderColor(value: any): this;
    set borderEndEndRadius(value: any);
    get borderEndEndRadius(): any;
    setBorderEndEndRadius(value: any): this;
    set borderEndStartRadius(value: any);
    get borderEndStartRadius(): any;
    setBorderEndStartRadius(value: any): this;
    set borderImage(value: any);
    get borderImage(): any;
    setBorderImage(value: any): this;
    set borderImageOutset(value: any);
    get borderImageOutset(): any;
    setBorderImageOutset(value: any): this;
    set borderImageRepeat(value: any);
    get borderImageRepeat(): any;
    setBorderImageRepeat(value: any): this;
    set borderImageSlice(value: any);
    get borderImageSlice(): any;
    setBorderImageSlice(value: any): this;
    set borderImageSource(value: any);
    get borderImageSource(): any;
    setBorderImageSource(value: any): this;
    set borderImageWidth(value: any);
    get borderImageWidth(): any;
    setBorderImageWidth(value: any): this;
    set borderInline(value: any);
    get borderInline(): any;
    setBorderInline(value: any): this;
    set borderInlineColor(value: any);
    get borderInlineColor(): any;
    setBorderInlineColor(value: any): this;
    set borderInlineEnd(value: any);
    get borderInlineEnd(): any;
    setBorderInlineEnd(value: any): this;
    set borderInlineEndColor(value: any);
    get borderInlineEndColor(): any;
    setBorderInlineEndColor(value: any): this;
    set borderInlineEndStyle(value: any);
    get borderInlineEndStyle(): any;
    setBorderInlineEndStyle(value: any): this;
    set borderInlineEndWidth(value: any);
    get borderInlineEndWidth(): any;
    setBorderInlineEndWidth(value: any): this;
    set borderInlineStart(value: any);
    get borderInlineStart(): any;
    setBorderInlineStart(value: any): this;
    set borderInlineStartColor(value: any);
    get borderInlineStartColor(): any;
    setBorderInlineStartColor(value: any): this;
    set borderInlineStartStyle(value: any);
    get borderInlineStartStyle(): any;
    setBorderInlineStartStyle(value: any): this;
    set borderInlineStartWidth(value: any);
    get borderInlineStartWidth(): any;
    setBorderInlineStartWidth(value: any): this;
    set borderInlineStyle(value: any);
    get borderInlineStyle(): any;
    setBorderInlineStyle(value: any): this;
    set borderInlineWidth(value: any);
    get borderInlineWidth(): any;
    setBorderInlineWidth(value: any): this;
    set borderLeft(value: any);
    get borderLeft(): any;
    setBorderLeft(value: any): this;
    set borderLeftColor(value: any);
    get borderLeftColor(): any;
    setBorderLeftColor(value: any): this;
    set borderLeftStyle(value: any);
    get borderLeftStyle(): any;
    setBorderLeftStyle(value: any): this;
    set borderLeftWidth(value: any);
    get borderLeftWidth(): any;
    setBorderLeftWidth(value: any): this;
    set borderRadius(value: any);
    get borderRadius(): any;
    setBorderRadius(value: any): this;
    set borderRight(value: any);
    get borderRight(): any;
    setBorderRight(value: any): this;
    set borderRightColor(value: any);
    get borderRightColor(): any;
    setBorderRightColor(value: any): this;
    set borderRightStyle(value: any);
    get borderRightStyle(): any;
    setBorderRightStyle(value: any): this;
    set borderRightWidth(value: any);
    get borderRightWidth(): any;
    setBorderRightWidth(value: any): this;
    set borderSpacing(value: any);
    get borderSpacing(): any;
    setBorderSpacing(value: any): this;
    set borderStartEndRadius(value: any);
    get borderStartEndRadius(): any;
    setBorderStartEndRadius(value: any): this;
    set borderStartStartRadius(value: any);
    get borderStartStartRadius(): any;
    setBorderStartStartRadius(value: any): this;
    set borderStyle(value: any);
    get borderStyle(): any;
    setBorderStyle(value: any): this;
    set borderTop(value: any);
    get borderTop(): any;
    setBorderTop(value: any): this;
    set borderTopColor(value: any);
    get borderTopColor(): any;
    setBorderTopColor(value: any): this;
    set borderTopLeftRadius(value: any);
    get borderTopLeftRadius(): any;
    setBorderTopLeftRadius(value: any): this;
    set borderTopRightRadius(value: any);
    get borderTopRightRadius(): any;
    setBorderTopRightRadius(value: any): this;
    set borderTopStyle(value: any);
    get borderTopStyle(): any;
    setBorderTopStyle(value: any): this;
    set borderTopWidth(value: any);
    get borderTopWidth(): any;
    setBorderTopWidth(value: any): this;
    set borderWidth(value: any);
    get borderWidth(): any;
    setBorderWidth(value: any): this;
    set bottom(value: any);
    get bottom(): any;
    setBottom(value: any): this;
    set boxShadow(value: any);
    get boxShadow(): any;
    setBoxShadow(value: any): this;
    set boxSizing(value: any);
    get boxSizing(): any;
    setBoxSizing(value: any): this;
    set breakAfter(value: any);
    get breakAfter(): any;
    setBreakAfter(value: any): this;
    set breakBefore(value: any);
    get breakBefore(): any;
    setBreakBefore(value: any): this;
    set breakInside(value: any);
    get breakInside(): any;
    setBreakInside(value: any): this;
    set bufferedRendering(value: any);
    get bufferedRendering(): any;
    setBufferedRendering(value: any): this;
    set captionSide(value: any);
    get captionSide(): any;
    setCaptionSide(value: any): this;
    set caretColor(value: any);
    get caretColor(): any;
    setCaretColor(value: any): this;
    set clear(value: any);
    get clear(): any;
    setClear(value: any): this;
    set clip(value: any);
    get clip(): any;
    setClip(value: any): this;
    set clipPath(value: any);
    get clipPath(): any;
    setClipPath(value: any): this;
    set clipRule(value: any);
    get clipRule(): any;
    setClipRule(value: any): this;
    set color(value: any);
    get color(): any;
    setColor(value: any): this;
    set colorInterpolation(value: any);
    get colorInterpolation(): any;
    setColorInterpolation(value: any): this;
    set colorInterpolationFilters(value: any);
    get colorInterpolationFilters(): any;
    setColorInterpolationFilters(value: any): this;
    set colorRendering(value: any);
    get colorRendering(): any;
    setColorRendering(value: any): this;
    set colorScheme(value: any);
    get colorScheme(): any;
    setColorScheme(value: any): this;
    set columnCount(value: any);
    get columnCount(): any;
    setColumnCount(value: any): this;
    set columnFill(value: any);
    get columnFill(): any;
    setColumnFill(value: any): this;
    set columnGap(value: any);
    get columnGap(): any;
    setColumnGap(value: any): this;
    set columnRule(value: any);
    get columnRule(): any;
    setColumnRule(value: any): this;
    set columnRuleColor(value: any);
    get columnRuleColor(): any;
    setColumnRuleColor(value: any): this;
    set columnRuleStyle(value: any);
    get columnRuleStyle(): any;
    setColumnRuleStyle(value: any): this;
    set columnRuleWidth(value: any);
    get columnRuleWidth(): any;
    setColumnRuleWidth(value: any): this;
    set columnSpan(value: any);
    get columnSpan(): any;
    setColumnSpan(value: any): this;
    set columnWidth(value: any);
    get columnWidth(): any;
    setColumnWidth(value: any): this;
    set columns(value: any);
    get columns(): any;
    setColumns(value: any): this;
    set contain(value: any);
    get contain(): any;
    setContain(value: any): this;
    set containIntrinsicBlockSize(value: any);
    get containIntrinsicBlockSize(): any;
    setContainIntrinsicBlockSize(value: any): this;
    set containIntrinsicHeight(value: any);
    get containIntrinsicHeight(): any;
    setContainIntrinsicHeight(value: any): this;
    set containIntrinsicInlineSize(value: any);
    get containIntrinsicInlineSize(): any;
    setContainIntrinsicInlineSize(value: any): this;
    set containIntrinsicSize(value: any);
    get containIntrinsicSize(): any;
    setContainIntrinsicSize(value: any): this;
    set containIntrinsicWidth(value: any);
    get containIntrinsicWidth(): any;
    setContainIntrinsicWidth(value: any): this;
    set container(value: any);
    get container(): any;
    setContainer(value: any): this;
    set containerName(value: any);
    get containerName(): any;
    setContainerName(value: any): this;
    set containerType(value: any);
    get containerType(): any;
    setContainerType(value: any): this;
    set content(value: any);
    get content(): any;
    setContent(value: any): this;
    set contentVisibility(value: any);
    get contentVisibility(): any;
    setContentVisibility(value: any): this;
    set counterIncrement(value: any);
    get counterIncrement(): any;
    setCounterIncrement(value: any): this;
    set counterReset(value: any);
    get counterReset(): any;
    setCounterReset(value: any): this;
    set counterSet(value: any);
    get counterSet(): any;
    setCounterSet(value: any): this;
    set cursor(value: any);
    get cursor(): any;
    setCursor(value: any): this;
    set cx(value: any);
    get cx(): any;
    setCx(value: any): this;
    set cy(value: any);
    get cy(): any;
    setCy(value: any): this;
    set d(value: any);
    get d(): any;
    setD(value: any): this;
    set descentOverride(value: any);
    get descentOverride(): any;
    setDescentOverride(value: any): this;
    set direction(value: any);
    get direction(): any;
    setDirection(value: any): this;
    set display(value: any);
    get display(): any;
    setDisplay(value: any): this;
    set dominantBaseline(value: any);
    get dominantBaseline(): any;
    setDominantBaseline(value: any): this;
    set emptyCells(value: any);
    get emptyCells(): any;
    setEmptyCells(value: any): this;
    set fallback(value: any);
    get fallback(): any;
    setFallback(value: any): this;
    set fill(value: any);
    get fill(): any;
    setFill(value: any): this;
    set fillOpacity(value: any);
    get fillOpacity(): any;
    setFillOpacity(value: any): this;
    set fillRule(value: any);
    get fillRule(): any;
    setFillRule(value: any): this;
    set filter(value: any);
    get filter(): any;
    setFilter(value: any): this;
    set flex(value: any);
    get flex(): any;
    setFlex(value: any): this;
    set flexBasis(value: any);
    get flexBasis(): any;
    setFlexBasis(value: any): this;
    set flexDirection(value: any);
    get flexDirection(): any;
    setFlexDirection(value: any): this;
    set flexFlow(value: any);
    get flexFlow(): any;
    setFlexFlow(value: any): this;
    set flexGrow(value: any);
    get flexGrow(): any;
    setFlexGrow(value: any): this;
    set flexShrink(value: any);
    get flexShrink(): any;
    setFlexShrink(value: any): this;
    set flexWrap(value: any);
    get flexWrap(): any;
    setFlexWrap(value: any): this;
    set float(value: any);
    get float(): any;
    setFloat(value: any): this;
    set floodColor(value: any);
    get floodColor(): any;
    setFloodColor(value: any): this;
    set floodOpacity(value: any);
    get floodOpacity(): any;
    setFloodOpacity(value: any): this;
    set font(value: any);
    get font(): any;
    setFont(value: any): this;
    set fontDisplay(value: any);
    get fontDisplay(): any;
    setFontDisplay(value: any): this;
    set fontFamily(value: any);
    get fontFamily(): any;
    setFontFamily(value: any): this;
    set fontFeatureSettings(value: any);
    get fontFeatureSettings(): any;
    setFontFeatureSettings(value: any): this;
    set fontKerning(value: any);
    get fontKerning(): any;
    setFontKerning(value: any): this;
    set fontOpticalSizing(value: any);
    get fontOpticalSizing(): any;
    setFontOpticalSizing(value: any): this;
    set fontPalette(value: any);
    get fontPalette(): any;
    setFontPalette(value: any): this;
    set fontSize(value: any);
    get fontSize(): any;
    setFontSize(value: any): this;
    set fontStretch(value: any);
    get fontStretch(): any;
    setFontStretch(value: any): this;
    set fontStyle(value: any);
    get fontStyle(): any;
    setFontStyle(value: any): this;
    set fontSynthesis(value: any);
    get fontSynthesis(): any;
    setFontSynthesis(value: any): this;
    set fontSynthesisSmallCaps(value: any);
    get fontSynthesisSmallCaps(): any;
    setFontSynthesisSmallCaps(value: any): this;
    set fontSynthesisStyle(value: any);
    get fontSynthesisStyle(): any;
    setFontSynthesisStyle(value: any): this;
    set fontSynthesisWeight(value: any);
    get fontSynthesisWeight(): any;
    setFontSynthesisWeight(value: any): this;
    set fontVariant(value: any);
    get fontVariant(): any;
    setFontVariant(value: any): this;
    set fontVariantAlternates(value: any);
    get fontVariantAlternates(): any;
    setFontVariantAlternates(value: any): this;
    set fontVariantCaps(value: any);
    get fontVariantCaps(): any;
    setFontVariantCaps(value: any): this;
    set fontVariantEastAsian(value: any);
    get fontVariantEastAsian(): any;
    setFontVariantEastAsian(value: any): this;
    set fontVariantLigatures(value: any);
    get fontVariantLigatures(): any;
    setFontVariantLigatures(value: any): this;
    set fontVariantNumeric(value: any);
    get fontVariantNumeric(): any;
    setFontVariantNumeric(value: any): this;
    set fontVariantPosition(value: any);
    get fontVariantPosition(): any;
    setFontVariantPosition(value: any): this;
    set fontVariationSettings(value: any);
    get fontVariationSettings(): any;
    setFontVariationSettings(value: any): this;
    set fontWeight(value: any);
    get fontWeight(): any;
    setFontWeight(value: any): this;
    set forcedColorAdjust(value: any);
    get forcedColorAdjust(): any;
    setForcedColorAdjust(value: any): this;
    set gap(value: any);
    get gap(): any;
    setGap(value: any): this;
    set grid(value: any);
    get grid(): any;
    setGrid(value: any): this;
    set gridArea(value: any);
    get gridArea(): any;
    setGridArea(value: any): this;
    set gridAutoColumns(value: any);
    get gridAutoColumns(): any;
    setGridAutoColumns(value: any): this;
    set gridAutoFlow(value: any);
    get gridAutoFlow(): any;
    setGridAutoFlow(value: any): this;
    set gridAutoRows(value: any);
    get gridAutoRows(): any;
    setGridAutoRows(value: any): this;
    set gridColumn(value: any);
    get gridColumn(): any;
    setGridColumn(value: any): this;
    set gridColumnEnd(value: any);
    get gridColumnEnd(): any;
    setGridColumnEnd(value: any): this;
    set gridColumnGap(value: any);
    get gridColumnGap(): any;
    setGridColumnGap(value: any): this;
    set gridColumnStart(value: any);
    get gridColumnStart(): any;
    setGridColumnStart(value: any): this;
    set gridGap(value: any);
    get gridGap(): any;
    setGridGap(value: any): this;
    set gridRow(value: any);
    get gridRow(): any;
    setGridRow(value: any): this;
    set gridRowEnd(value: any);
    get gridRowEnd(): any;
    setGridRowEnd(value: any): this;
    set gridRowGap(value: any);
    get gridRowGap(): any;
    setGridRowGap(value: any): this;
    set gridRowStart(value: any);
    get gridRowStart(): any;
    setGridRowStart(value: any): this;
    set gridTemplate(value: any);
    get gridTemplate(): any;
    setGridTemplate(value: any): this;
    set gridTemplateAreas(value: any);
    get gridTemplateAreas(): any;
    setGridTemplateAreas(value: any): this;
    set gridTemplateColumns(value: any);
    get gridTemplateColumns(): any;
    setGridTemplateColumns(value: any): this;
    set gridTemplateRows(value: any);
    get gridTemplateRows(): any;
    setGridTemplateRows(value: any): this;
    set height(value: any);
    get height(): any;
    setHeight(value: any): this;
    set hyphenateCharacter(value: any);
    get hyphenateCharacter(): any;
    setHyphenateCharacter(value: any): this;
    set hyphenateLimitChars(value: any);
    get hyphenateLimitChars(): any;
    setHyphenateLimitChars(value: any): this;
    set hyphens(value: any);
    get hyphens(): any;
    setHyphens(value: any): this;
    set imageOrientation(value: any);
    get imageOrientation(): any;
    setImageOrientation(value: any): this;
    set imageRendering(value: any);
    get imageRendering(): any;
    setImageRendering(value: any): this;
    set inherits(value: any);
    get inherits(): any;
    setInherits(value: any): this;
    set initialLetter(value: any);
    get initialLetter(): any;
    setInitialLetter(value: any): this;
    set initialValue(value: any);
    get initialValue(): any;
    setInitialValue(value: any): this;
    set inlineSize(value: any);
    get inlineSize(): any;
    setInlineSize(value: any): this;
    set inset(value: any);
    get inset(): any;
    setInset(value: any): this;
    set insetBlock(value: any);
    get insetBlock(): any;
    setInsetBlock(value: any): this;
    set insetBlockEnd(value: any);
    get insetBlockEnd(): any;
    setInsetBlockEnd(value: any): this;
    set insetBlockStart(value: any);
    get insetBlockStart(): any;
    setInsetBlockStart(value: any): this;
    set insetInline(value: any);
    get insetInline(): any;
    setInsetInline(value: any): this;
    set insetInlineEnd(value: any);
    get insetInlineEnd(): any;
    setInsetInlineEnd(value: any): this;
    set insetInlineStart(value: any);
    get insetInlineStart(): any;
    setInsetInlineStart(value: any): this;
    set isolation(value: any);
    get isolation(): any;
    setIsolation(value: any): this;
    set justifyContent(value: any);
    get justifyContent(): any;
    setJustifyContent(value: any): this;
    set justifyItems(value: any);
    get justifyItems(): any;
    setJustifyItems(value: any): this;
    set justifySelf(value: any);
    get justifySelf(): any;
    setJustifySelf(value: any): this;
    set left(value: any);
    get left(): any;
    setLeft(value: any): this;
    set letterSpacing(value: any);
    get letterSpacing(): any;
    setLetterSpacing(value: any): this;
    set lightingColor(value: any);
    get lightingColor(): any;
    setLightingColor(value: any): this;
    set lineBreak(value: any);
    get lineBreak(): any;
    setLineBreak(value: any): this;
    set lineGapOverride(value: any);
    get lineGapOverride(): any;
    setLineGapOverride(value: any): this;
    set lineHeight(value: any);
    get lineHeight(): any;
    setLineHeight(value: any): this;
    set listStyle(value: any);
    get listStyle(): any;
    setListStyle(value: any): this;
    set listStyleImage(value: any);
    get listStyleImage(): any;
    setListStyleImage(value: any): this;
    set listStylePosition(value: any);
    get listStylePosition(): any;
    setListStylePosition(value: any): this;
    set listStyleType(value: any);
    get listStyleType(): any;
    setListStyleType(value: any): this;
    set margin(value: any);
    get margin(): any;
    setMargin(value: any): this;
    set marginBlock(value: any);
    get marginBlock(): any;
    setMarginBlock(value: any): this;
    set marginBlockEnd(value: any);
    get marginBlockEnd(): any;
    setMarginBlockEnd(value: any): this;
    set marginBlockStart(value: any);
    get marginBlockStart(): any;
    setMarginBlockStart(value: any): this;
    set marginBottom(value: any);
    get marginBottom(): any;
    setMarginBottom(value: any): this;
    set marginInline(value: any);
    get marginInline(): any;
    setMarginInline(value: any): this;
    set marginInlineEnd(value: any);
    get marginInlineEnd(): any;
    setMarginInlineEnd(value: any): this;
    set marginInlineStart(value: any);
    get marginInlineStart(): any;
    setMarginInlineStart(value: any): this;
    set marginLeft(value: any);
    get marginLeft(): any;
    setMarginLeft(value: any): this;
    set marginRight(value: any);
    get marginRight(): any;
    setMarginRight(value: any): this;
    set marginTop(value: any);
    get marginTop(): any;
    setMarginTop(value: any): this;
    set marker(value: any);
    get marker(): any;
    setMarker(value: any): this;
    set markerEnd(value: any);
    get markerEnd(): any;
    setMarkerEnd(value: any): this;
    set markerMid(value: any);
    get markerMid(): any;
    setMarkerMid(value: any): this;
    set markerStart(value: any);
    get markerStart(): any;
    setMarkerStart(value: any): this;
    set mask(value: any);
    get mask(): any;
    setMask(value: any): this;
    set maskType(value: any);
    get maskType(): any;
    setMaskType(value: any): this;
    set mathDepth(value: any);
    get mathDepth(): any;
    setMathDepth(value: any): this;
    set mathShift(value: any);
    get mathShift(): any;
    setMathShift(value: any): this;
    set mathStyle(value: any);
    get mathStyle(): any;
    setMathStyle(value: any): this;
    set maxBlockSize(value: any);
    get maxBlockSize(): any;
    setMaxBlockSize(value: any): this;
    set maxHeight(value: any);
    get maxHeight(): any;
    setMaxHeight(value: any): this;
    set maxInlineSize(value: any);
    get maxInlineSize(): any;
    setMaxInlineSize(value: any): this;
    set maxWidth(value: any);
    get maxWidth(): any;
    setMaxWidth(value: any): this;
    set minBlockSize(value: any);
    get minBlockSize(): any;
    setMinBlockSize(value: any): this;
    set minHeight(value: any);
    get minHeight(): any;
    setMinHeight(value: any): this;
    set minInlineSize(value: any);
    get minInlineSize(): any;
    setMinInlineSize(value: any): this;
    set minWidth(value: any);
    get minWidth(): any;
    setMinWidth(value: any): this;
    set mixBlendMode(value: any);
    get mixBlendMode(): any;
    setMixBlendMode(value: any): this;
    set negative(value: any);
    get negative(): any;
    setNegative(value: any): this;
    set objectFit(value: any);
    get objectFit(): any;
    setObjectFit(value: any): this;
    set objectPosition(value: any);
    get objectPosition(): any;
    setObjectPosition(value: any): this;
    set objectViewBox(value: any);
    get objectViewBox(): any;
    setObjectViewBox(value: any): this;
    set offset(value: any);
    get offset(): any;
    setOffset(value: any): this;
    set offsetAnchor(value: any);
    get offsetAnchor(): any;
    setOffsetAnchor(value: any): this;
    set offsetDistance(value: any);
    get offsetDistance(): any;
    setOffsetDistance(value: any): this;
    set offsetPath(value: any);
    get offsetPath(): any;
    setOffsetPath(value: any): this;
    set offsetPosition(value: any);
    get offsetPosition(): any;
    setOffsetPosition(value: any): this;
    set offsetRotate(value: any);
    get offsetRotate(): any;
    setOffsetRotate(value: any): this;
    set opacity(value: any);
    get opacity(): any;
    setOpacity(value: any): this;
    set order(value: any);
    get order(): any;
    setOrder(value: any): this;
    set orphans(value: any);
    get orphans(): any;
    setOrphans(value: any): this;
    set outline(value: any);
    get outline(): any;
    setOutline(value: any): this;
    set outlineColor(value: any);
    get outlineColor(): any;
    setOutlineColor(value: any): this;
    set outlineOffset(value: any);
    get outlineOffset(): any;
    setOutlineOffset(value: any): this;
    set outlineStyle(value: any);
    get outlineStyle(): any;
    setOutlineStyle(value: any): this;
    set outlineWidth(value: any);
    get outlineWidth(): any;
    setOutlineWidth(value: any): this;
    set overflow(value: any);
    get overflow(): any;
    setOverflow(value: any): this;
    set overflowAnchor(value: any);
    get overflowAnchor(): any;
    setOverflowAnchor(value: any): this;
    set overflowClipMargin(value: any);
    get overflowClipMargin(): any;
    setOverflowClipMargin(value: any): this;
    set overflowWrap(value: any);
    get overflowWrap(): any;
    setOverflowWrap(value: any): this;
    set overflowX(value: any);
    get overflowX(): any;
    setOverflowX(value: any): this;
    set overflowY(value: any);
    get overflowY(): any;
    setOverflowY(value: any): this;
    set overlay(value: any);
    get overlay(): any;
    setOverlay(value: any): this;
    set overrideColors(value: any);
    get overrideColors(): any;
    setOverrideColors(value: any): this;
    set overscrollBehavior(value: any);
    get overscrollBehavior(): any;
    setOverscrollBehavior(value: any): this;
    set overscrollBehaviorBlock(value: any);
    get overscrollBehaviorBlock(): any;
    setOverscrollBehaviorBlock(value: any): this;
    set overscrollBehaviorInline(value: any);
    get overscrollBehaviorInline(): any;
    setOverscrollBehaviorInline(value: any): this;
    set overscrollBehaviorX(value: any);
    get overscrollBehaviorX(): any;
    setOverscrollBehaviorX(value: any): this;
    set overscrollBehaviorY(value: any);
    get overscrollBehaviorY(): any;
    setOverscrollBehaviorY(value: any): this;
    set pad(value: any);
    get pad(): any;
    setPad(value: any): this;
    set padding(value: any);
    get padding(): any;
    setPadding(value: any): this;
    set paddingBlock(value: any);
    get paddingBlock(): any;
    setPaddingBlock(value: any): this;
    set paddingBlockEnd(value: any);
    get paddingBlockEnd(): any;
    setPaddingBlockEnd(value: any): this;
    set paddingBlockStart(value: any);
    get paddingBlockStart(): any;
    setPaddingBlockStart(value: any): this;
    set paddingBottom(value: any);
    get paddingBottom(): any;
    setPaddingBottom(value: any): this;
    set paddingInline(value: any);
    get paddingInline(): any;
    setPaddingInline(value: any): this;
    set paddingInlineEnd(value: any);
    get paddingInlineEnd(): any;
    setPaddingInlineEnd(value: any): this;
    set paddingInlineStart(value: any);
    get paddingInlineStart(): any;
    setPaddingInlineStart(value: any): this;
    set paddingLeft(value: any);
    get paddingLeft(): any;
    setPaddingLeft(value: any): this;
    set paddingRight(value: any);
    get paddingRight(): any;
    setPaddingRight(value: any): this;
    set paddingTop(value: any);
    get paddingTop(): any;
    setPaddingTop(value: any): this;
    set page(value: any);
    get page(): any;
    setPage(value: any): this;
    set pageBreakAfter(value: any);
    get pageBreakAfter(): any;
    setPageBreakAfter(value: any): this;
    set pageBreakBefore(value: any);
    get pageBreakBefore(): any;
    setPageBreakBefore(value: any): this;
    set pageBreakInside(value: any);
    get pageBreakInside(): any;
    setPageBreakInside(value: any): this;
    set pageOrientation(value: any);
    get pageOrientation(): any;
    setPageOrientation(value: any): this;
    set paintOrder(value: any);
    get paintOrder(): any;
    setPaintOrder(value: any): this;
    set perspective(value: any);
    get perspective(): any;
    setPerspective(value: any): this;
    set perspectiveOrigin(value: any);
    get perspectiveOrigin(): any;
    setPerspectiveOrigin(value: any): this;
    set placeContent(value: any);
    get placeContent(): any;
    setPlaceContent(value: any): this;
    set placeItems(value: any);
    get placeItems(): any;
    setPlaceItems(value: any): this;
    set placeSelf(value: any);
    get placeSelf(): any;
    setPlaceSelf(value: any): this;
    set pointerEvents(value: any);
    get pointerEvents(): any;
    setPointerEvents(value: any): this;
    set position(value: any);
    get position(): any;
    setPosition(value: any): this;
    set prefix(value: any);
    get prefix(): any;
    setPrefix(value: any): this;
    set quotes(value: any);
    get quotes(): any;
    setQuotes(value: any): this;
    set r(value: any);
    get r(): any;
    setR(value: any): this;
    set range(value: any);
    get range(): any;
    setRange(value: any): this;
    set resize(value: any);
    get resize(): any;
    setResize(value: any): this;
    set right(value: any);
    get right(): any;
    setRight(value: any): this;
    set rotate(value: any);
    get rotate(): any;
    setRotate(value: any): this;
    set rowGap(value: any);
    get rowGap(): any;
    setRowGap(value: any): this;
    set rubyPosition(value: any);
    get rubyPosition(): any;
    setRubyPosition(value: any): this;
    set rx(value: any);
    get rx(): any;
    setRx(value: any): this;
    set ry(value: any);
    get ry(): any;
    setRy(value: any): this;
    set scale(value: any);
    get scale(): any;
    setScale(value: any): this;
    set scrollBehavior(value: any);
    get scrollBehavior(): any;
    setScrollBehavior(value: any): this;
    set scrollMargin(value: any);
    get scrollMargin(): any;
    setScrollMargin(value: any): this;
    set scrollMarginBlock(value: any);
    get scrollMarginBlock(): any;
    setScrollMarginBlock(value: any): this;
    set scrollMarginBlockEnd(value: any);
    get scrollMarginBlockEnd(): any;
    setScrollMarginBlockEnd(value: any): this;
    set scrollMarginBlockStart(value: any);
    get scrollMarginBlockStart(): any;
    setScrollMarginBlockStart(value: any): this;
    set scrollMarginBottom(value: any);
    get scrollMarginBottom(): any;
    setScrollMarginBottom(value: any): this;
    set scrollMarginInline(value: any);
    get scrollMarginInline(): any;
    setScrollMarginInline(value: any): this;
    set scrollMarginInlineEnd(value: any);
    get scrollMarginInlineEnd(): any;
    setScrollMarginInlineEnd(value: any): this;
    set scrollMarginInlineStart(value: any);
    get scrollMarginInlineStart(): any;
    setScrollMarginInlineStart(value: any): this;
    set scrollMarginLeft(value: any);
    get scrollMarginLeft(): any;
    setScrollMarginLeft(value: any): this;
    set scrollMarginRight(value: any);
    get scrollMarginRight(): any;
    setScrollMarginRight(value: any): this;
    set scrollMarginTop(value: any);
    get scrollMarginTop(): any;
    setScrollMarginTop(value: any): this;
    set scrollPadding(value: any);
    get scrollPadding(): any;
    setScrollPadding(value: any): this;
    set scrollPaddingBlock(value: any);
    get scrollPaddingBlock(): any;
    setScrollPaddingBlock(value: any): this;
    set scrollPaddingBlockEnd(value: any);
    get scrollPaddingBlockEnd(): any;
    setScrollPaddingBlockEnd(value: any): this;
    set scrollPaddingBlockStart(value: any);
    get scrollPaddingBlockStart(): any;
    setScrollPaddingBlockStart(value: any): this;
    set scrollPaddingBottom(value: any);
    get scrollPaddingBottom(): any;
    setScrollPaddingBottom(value: any): this;
    set scrollPaddingInline(value: any);
    get scrollPaddingInline(): any;
    setScrollPaddingInline(value: any): this;
    set scrollPaddingInlineEnd(value: any);
    get scrollPaddingInlineEnd(): any;
    setScrollPaddingInlineEnd(value: any): this;
    set scrollPaddingInlineStart(value: any);
    get scrollPaddingInlineStart(): any;
    setScrollPaddingInlineStart(value: any): this;
    set scrollPaddingLeft(value: any);
    get scrollPaddingLeft(): any;
    setScrollPaddingLeft(value: any): this;
    set scrollPaddingRight(value: any);
    get scrollPaddingRight(): any;
    setScrollPaddingRight(value: any): this;
    set scrollPaddingTop(value: any);
    get scrollPaddingTop(): any;
    setScrollPaddingTop(value: any): this;
    set scrollSnapAlign(value: any);
    get scrollSnapAlign(): any;
    setScrollSnapAlign(value: any): this;
    set scrollSnapStop(value: any);
    get scrollSnapStop(): any;
    setScrollSnapStop(value: any): this;
    set scrollSnapType(value: any);
    get scrollSnapType(): any;
    setScrollSnapType(value: any): this;
    set scrollTimeline(value: any);
    get scrollTimeline(): any;
    setScrollTimeline(value: any): this;
    set scrollTimelineAxis(value: any);
    get scrollTimelineAxis(): any;
    setScrollTimelineAxis(value: any): this;
    set scrollTimelineName(value: any);
    get scrollTimelineName(): any;
    setScrollTimelineName(value: any): this;
    set scrollbarGutter(value: any);
    get scrollbarGutter(): any;
    setScrollbarGutter(value: any): this;
    set shapeImageThreshold(value: any);
    get shapeImageThreshold(): any;
    setShapeImageThreshold(value: any): this;
    set shapeMargin(value: any);
    get shapeMargin(): any;
    setShapeMargin(value: any): this;
    set shapeOutside(value: any);
    get shapeOutside(): any;
    setShapeOutside(value: any): this;
    set shapeRendering(value: any);
    get shapeRendering(): any;
    setShapeRendering(value: any): this;
    set size(value: any);
    get size(): any;
    setSize(value: any): this;
    set sizeAdjust(value: any);
    get sizeAdjust(): any;
    setSizeAdjust(value: any): this;
    set speak(value: any);
    get speak(): any;
    setSpeak(value: any): this;
    set speakAs(value: any);
    get speakAs(): any;
    setSpeakAs(value: any): this;
    set src(value: any);
    get src(): any;
    setSrc(value: any): this;
    set stopColor(value: any);
    get stopColor(): any;
    setStopColor(value: any): this;
    set stopOpacity(value: any);
    get stopOpacity(): any;
    setStopOpacity(value: any): this;
    set stroke(value: any);
    get stroke(): any;
    setStroke(value: any): this;
    set strokeDasharray(value: any);
    get strokeDasharray(): any;
    setStrokeDasharray(value: any): this;
    set strokeDashoffset(value: any);
    get strokeDashoffset(): any;
    setStrokeDashoffset(value: any): this;
    set strokeLinecap(value: any);
    get strokeLinecap(): any;
    setStrokeLinecap(value: any): this;
    set strokeLinejoin(value: any);
    get strokeLinejoin(): any;
    setStrokeLinejoin(value: any): this;
    set strokeMiterlimit(value: any);
    get strokeMiterlimit(): any;
    setStrokeMiterlimit(value: any): this;
    set strokeOpacity(value: any);
    get strokeOpacity(): any;
    setStrokeOpacity(value: any): this;
    set strokeWidth(value: any);
    get strokeWidth(): any;
    setStrokeWidth(value: any): this;
    set suffix(value: any);
    get suffix(): any;
    setSuffix(value: any): this;
    set symbols(value: any);
    get symbols(): any;
    setSymbols(value: any): this;
    set syntax(value: any);
    get syntax(): any;
    setSyntax(value: any): this;
    set system(value: any);
    get system(): any;
    setSystem(value: any): this;
    set tabSize(value: any);
    get tabSize(): any;
    setTabSize(value: any): this;
    set tableLayout(value: any);
    get tableLayout(): any;
    setTableLayout(value: any): this;
    set textAlign(value: any);
    get textAlign(): any;
    setTextAlign(value: any): this;
    set textAlignLast(value: any);
    get textAlignLast(): any;
    setTextAlignLast(value: any): this;
    set textAnchor(value: any);
    get textAnchor(): any;
    setTextAnchor(value: any): this;
    set textCombineUpright(value: any);
    get textCombineUpright(): any;
    setTextCombineUpright(value: any): this;
    set textDecoration(value: any);
    get textDecoration(): any;
    setTextDecoration(value: any): this;
    set textDecorationColor(value: any);
    get textDecorationColor(): any;
    setTextDecorationColor(value: any): this;
    set textDecorationLine(value: any);
    get textDecorationLine(): any;
    setTextDecorationLine(value: any): this;
    set textDecorationSkipInk(value: any);
    get textDecorationSkipInk(): any;
    setTextDecorationSkipInk(value: any): this;
    set textDecorationStyle(value: any);
    get textDecorationStyle(): any;
    setTextDecorationStyle(value: any): this;
    set textDecorationThickness(value: any);
    get textDecorationThickness(): any;
    setTextDecorationThickness(value: any): this;
    set textEmphasis(value: any);
    get textEmphasis(): any;
    setTextEmphasis(value: any): this;
    set textEmphasisColor(value: any);
    get textEmphasisColor(): any;
    setTextEmphasisColor(value: any): this;
    set textEmphasisPosition(value: any);
    get textEmphasisPosition(): any;
    setTextEmphasisPosition(value: any): this;
    set textEmphasisStyle(value: any);
    get textEmphasisStyle(): any;
    setTextEmphasisStyle(value: any): this;
    set textIndent(value: any);
    get textIndent(): any;
    setTextIndent(value: any): this;
    set textOrientation(value: any);
    get textOrientation(): any;
    setTextOrientation(value: any): this;
    set textOverflow(value: any);
    get textOverflow(): any;
    setTextOverflow(value: any): this;
    set textRendering(value: any);
    get textRendering(): any;
    setTextRendering(value: any): this;
    set textShadow(value: any);
    get textShadow(): any;
    setTextShadow(value: any): this;
    set textSizeAdjust(value: any);
    get textSizeAdjust(): any;
    setTextSizeAdjust(value: any): this;
    set textTransform(value: any);
    get textTransform(): any;
    setTextTransform(value: any): this;
    set textUnderlineOffset(value: any);
    get textUnderlineOffset(): any;
    setTextUnderlineOffset(value: any): this;
    set textUnderlinePosition(value: any);
    get textUnderlinePosition(): any;
    setTextUnderlinePosition(value: any): this;
    set textWrap(value: any);
    get textWrap(): any;
    setTextWrap(value: any): this;
    set timelineScope(value: any);
    get timelineScope(): any;
    setTimelineScope(value: any): this;
    set top(value: any);
    get top(): any;
    setTop(value: any): this;
    set touchAction(value: any);
    get touchAction(): any;
    setTouchAction(value: any): this;
    set transform(value: any);
    get transform(): any;
    setTransform(value: any): this;
    set transformBox(value: any);
    get transformBox(): any;
    setTransformBox(value: any): this;
    set transformOrigin(value: any);
    get transformOrigin(): any;
    setTransformOrigin(value: any): this;
    set transformStyle(value: any);
    get transformStyle(): any;
    setTransformStyle(value: any): this;
    set transition(value: any);
    get transition(): any;
    setTransition(value: any): this;
    set transitionBehavior(value: any);
    get transitionBehavior(): any;
    setTransitionBehavior(value: any): this;
    set transitionDelay(value: any);
    get transitionDelay(): any;
    setTransitionDelay(value: any): this;
    set transitionDuration(value: any);
    get transitionDuration(): any;
    setTransitionDuration(value: any): this;
    set transitionProperty(value: any);
    get transitionProperty(): any;
    setTransitionProperty(value: any): this;
    set transitionTimingFunction(value: any);
    get transitionTimingFunction(): any;
    setTransitionTimingFunction(value: any): this;
    set translate(value: any);
    get translate(): any;
    setTranslate(value: any): this;
    set unicodeBidi(value: any);
    get unicodeBidi(): any;
    setUnicodeBidi(value: any): this;
    set unicodeRange(value: any);
    get unicodeRange(): any;
    setUnicodeRange(value: any): this;
    set userSelect(value: any);
    get userSelect(): any;
    setUserSelect(value: any): this;
    set vectorEffect(value: any);
    get vectorEffect(): any;
    setVectorEffect(value: any): this;
    set verticalAlign(value: any);
    get verticalAlign(): any;
    setVerticalAlign(value: any): this;
    set viewTimeline(value: any);
    get viewTimeline(): any;
    setViewTimeline(value: any): this;
    set viewTimelineAxis(value: any);
    get viewTimelineAxis(): any;
    setViewTimelineAxis(value: any): this;
    set viewTimelineInset(value: any);
    get viewTimelineInset(): any;
    setViewTimelineInset(value: any): this;
    set viewTimelineName(value: any);
    get viewTimelineName(): any;
    setViewTimelineName(value: any): this;
    set viewTransitionName(value: any);
    get viewTransitionName(): any;
    setViewTransitionName(value: any): this;
    set visibility(value: any);
    get visibility(): any;
    setVisibility(value: any): this;
    set webkitAlignContent(value: any);
    get webkitAlignContent(): any;
    setWebkitAlignContent(value: any): this;
    set webkitAlignItems(value: any);
    get webkitAlignItems(): any;
    setWebkitAlignItems(value: any): this;
    set webkitAlignSelf(value: any);
    get webkitAlignSelf(): any;
    setWebkitAlignSelf(value: any): this;
    set webkitAnimation(value: any);
    get webkitAnimation(): any;
    setWebkitAnimation(value: any): this;
    set webkitAnimationDelay(value: any);
    get webkitAnimationDelay(): any;
    setWebkitAnimationDelay(value: any): this;
    set webkitAnimationDirection(value: any);
    get webkitAnimationDirection(): any;
    setWebkitAnimationDirection(value: any): this;
    set webkitAnimationDuration(value: any);
    get webkitAnimationDuration(): any;
    setWebkitAnimationDuration(value: any): this;
    set webkitAnimationFillMode(value: any);
    get webkitAnimationFillMode(): any;
    setWebkitAnimationFillMode(value: any): this;
    set webkitAnimationIterationCount(value: any);
    get webkitAnimationIterationCount(): any;
    setWebkitAnimationIterationCount(value: any): this;
    set webkitAnimationName(value: any);
    get webkitAnimationName(): any;
    setWebkitAnimationName(value: any): this;
    set webkitAnimationPlayState(value: any);
    get webkitAnimationPlayState(): any;
    setWebkitAnimationPlayState(value: any): this;
    set webkitAnimationTimingFunction(value: any);
    get webkitAnimationTimingFunction(): any;
    setWebkitAnimationTimingFunction(value: any): this;
    set webkitAppRegion(value: any);
    get webkitAppRegion(): any;
    setWebkitAppRegion(value: any): this;
    set webkitAppearance(value: any);
    get webkitAppearance(): any;
    setWebkitAppearance(value: any): this;
    set webkitBackfaceVisibility(value: any);
    get webkitBackfaceVisibility(): any;
    setWebkitBackfaceVisibility(value: any): this;
    set webkitBackgroundClip(value: any);
    get webkitBackgroundClip(): any;
    setWebkitBackgroundClip(value: any): this;
    set webkitBackgroundOrigin(value: any);
    get webkitBackgroundOrigin(): any;
    setWebkitBackgroundOrigin(value: any): this;
    set webkitBackgroundSize(value: any);
    get webkitBackgroundSize(): any;
    setWebkitBackgroundSize(value: any): this;
    set webkitBorderAfter(value: any);
    get webkitBorderAfter(): any;
    setWebkitBorderAfter(value: any): this;
    set webkitBorderAfterColor(value: any);
    get webkitBorderAfterColor(): any;
    setWebkitBorderAfterColor(value: any): this;
    set webkitBorderAfterStyle(value: any);
    get webkitBorderAfterStyle(): any;
    setWebkitBorderAfterStyle(value: any): this;
    set webkitBorderAfterWidth(value: any);
    get webkitBorderAfterWidth(): any;
    setWebkitBorderAfterWidth(value: any): this;
    set webkitBorderBefore(value: any);
    get webkitBorderBefore(): any;
    setWebkitBorderBefore(value: any): this;
    set webkitBorderBeforeColor(value: any);
    get webkitBorderBeforeColor(): any;
    setWebkitBorderBeforeColor(value: any): this;
    set webkitBorderBeforeStyle(value: any);
    get webkitBorderBeforeStyle(): any;
    setWebkitBorderBeforeStyle(value: any): this;
    set webkitBorderBeforeWidth(value: any);
    get webkitBorderBeforeWidth(): any;
    setWebkitBorderBeforeWidth(value: any): this;
    set webkitBorderBottomLeftRadius(value: any);
    get webkitBorderBottomLeftRadius(): any;
    setWebkitBorderBottomLeftRadius(value: any): this;
    set webkitBorderBottomRightRadius(value: any);
    get webkitBorderBottomRightRadius(): any;
    setWebkitBorderBottomRightRadius(value: any): this;
    set webkitBorderEnd(value: any);
    get webkitBorderEnd(): any;
    setWebkitBorderEnd(value: any): this;
    set webkitBorderEndColor(value: any);
    get webkitBorderEndColor(): any;
    setWebkitBorderEndColor(value: any): this;
    set webkitBorderEndStyle(value: any);
    get webkitBorderEndStyle(): any;
    setWebkitBorderEndStyle(value: any): this;
    set webkitBorderEndWidth(value: any);
    get webkitBorderEndWidth(): any;
    setWebkitBorderEndWidth(value: any): this;
    set webkitBorderHorizontalSpacing(value: any);
    get webkitBorderHorizontalSpacing(): any;
    setWebkitBorderHorizontalSpacing(value: any): this;
    set webkitBorderImage(value: any);
    get webkitBorderImage(): any;
    setWebkitBorderImage(value: any): this;
    set webkitBorderRadius(value: any);
    get webkitBorderRadius(): any;
    setWebkitBorderRadius(value: any): this;
    set webkitBorderStart(value: any);
    get webkitBorderStart(): any;
    setWebkitBorderStart(value: any): this;
    set webkitBorderStartColor(value: any);
    get webkitBorderStartColor(): any;
    setWebkitBorderStartColor(value: any): this;
    set webkitBorderStartStyle(value: any);
    get webkitBorderStartStyle(): any;
    setWebkitBorderStartStyle(value: any): this;
    set webkitBorderStartWidth(value: any);
    get webkitBorderStartWidth(): any;
    setWebkitBorderStartWidth(value: any): this;
    set webkitBorderTopLeftRadius(value: any);
    get webkitBorderTopLeftRadius(): any;
    setWebkitBorderTopLeftRadius(value: any): this;
    set webkitBorderTopRightRadius(value: any);
    get webkitBorderTopRightRadius(): any;
    setWebkitBorderTopRightRadius(value: any): this;
    set webkitBorderVerticalSpacing(value: any);
    get webkitBorderVerticalSpacing(): any;
    setWebkitBorderVerticalSpacing(value: any): this;
    set webkitBoxAlign(value: any);
    get webkitBoxAlign(): any;
    setWebkitBoxAlign(value: any): this;
    set webkitBoxDecorationBreak(value: any);
    get webkitBoxDecorationBreak(): any;
    setWebkitBoxDecorationBreak(value: any): this;
    set webkitBoxDirection(value: any);
    get webkitBoxDirection(): any;
    setWebkitBoxDirection(value: any): this;
    set webkitBoxFlex(value: any);
    get webkitBoxFlex(): any;
    setWebkitBoxFlex(value: any): this;
    set webkitBoxOrdinalGroup(value: any);
    get webkitBoxOrdinalGroup(): any;
    setWebkitBoxOrdinalGroup(value: any): this;
    set webkitBoxOrient(value: any);
    get webkitBoxOrient(): any;
    setWebkitBoxOrient(value: any): this;
    set webkitBoxPack(value: any);
    get webkitBoxPack(): any;
    setWebkitBoxPack(value: any): this;
    set webkitBoxReflect(value: any);
    get webkitBoxReflect(): any;
    setWebkitBoxReflect(value: any): this;
    set webkitBoxShadow(value: any);
    get webkitBoxShadow(): any;
    setWebkitBoxShadow(value: any): this;
    set webkitBoxSizing(value: any);
    get webkitBoxSizing(): any;
    setWebkitBoxSizing(value: any): this;
    set webkitClipPath(value: any);
    get webkitClipPath(): any;
    setWebkitClipPath(value: any): this;
    set webkitColumnBreakAfter(value: any);
    get webkitColumnBreakAfter(): any;
    setWebkitColumnBreakAfter(value: any): this;
    set webkitColumnBreakBefore(value: any);
    get webkitColumnBreakBefore(): any;
    setWebkitColumnBreakBefore(value: any): this;
    set webkitColumnBreakInside(value: any);
    get webkitColumnBreakInside(): any;
    setWebkitColumnBreakInside(value: any): this;
    set webkitColumnCount(value: any);
    get webkitColumnCount(): any;
    setWebkitColumnCount(value: any): this;
    set webkitColumnGap(value: any);
    get webkitColumnGap(): any;
    setWebkitColumnGap(value: any): this;
    set webkitColumnRule(value: any);
    get webkitColumnRule(): any;
    setWebkitColumnRule(value: any): this;
    set webkitColumnRuleColor(value: any);
    get webkitColumnRuleColor(): any;
    setWebkitColumnRuleColor(value: any): this;
    set webkitColumnRuleStyle(value: any);
    get webkitColumnRuleStyle(): any;
    setWebkitColumnRuleStyle(value: any): this;
    set webkitColumnRuleWidth(value: any);
    get webkitColumnRuleWidth(): any;
    setWebkitColumnRuleWidth(value: any): this;
    set webkitColumnSpan(value: any);
    get webkitColumnSpan(): any;
    setWebkitColumnSpan(value: any): this;
    set webkitColumnWidth(value: any);
    get webkitColumnWidth(): any;
    setWebkitColumnWidth(value: any): this;
    set webkitColumns(value: any);
    get webkitColumns(): any;
    setWebkitColumns(value: any): this;
    set webkitFilter(value: any);
    get webkitFilter(): any;
    setWebkitFilter(value: any): this;
    set webkitFlex(value: any);
    get webkitFlex(): any;
    setWebkitFlex(value: any): this;
    set webkitFlexBasis(value: any);
    get webkitFlexBasis(): any;
    setWebkitFlexBasis(value: any): this;
    set webkitFlexDirection(value: any);
    get webkitFlexDirection(): any;
    setWebkitFlexDirection(value: any): this;
    set webkitFlexFlow(value: any);
    get webkitFlexFlow(): any;
    setWebkitFlexFlow(value: any): this;
    set webkitFlexGrow(value: any);
    get webkitFlexGrow(): any;
    setWebkitFlexGrow(value: any): this;
    set webkitFlexShrink(value: any);
    get webkitFlexShrink(): any;
    setWebkitFlexShrink(value: any): this;
    set webkitFlexWrap(value: any);
    get webkitFlexWrap(): any;
    setWebkitFlexWrap(value: any): this;
    set webkitFontFeatureSettings(value: any);
    get webkitFontFeatureSettings(): any;
    setWebkitFontFeatureSettings(value: any): this;
    set webkitFontSmoothing(value: any);
    get webkitFontSmoothing(): any;
    setWebkitFontSmoothing(value: any): this;
    set webkitHyphenateCharacter(value: any);
    get webkitHyphenateCharacter(): any;
    setWebkitHyphenateCharacter(value: any): this;
    set webkitJustifyContent(value: any);
    get webkitJustifyContent(): any;
    setWebkitJustifyContent(value: any): this;
    set webkitLineBreak(value: any);
    get webkitLineBreak(): any;
    setWebkitLineBreak(value: any): this;
    set webkitLineClamp(value: any);
    get webkitLineClamp(): any;
    setWebkitLineClamp(value: any): this;
    set webkitLocale(value: any);
    get webkitLocale(): any;
    setWebkitLocale(value: any): this;
    set webkitLogicalHeight(value: any);
    get webkitLogicalHeight(): any;
    setWebkitLogicalHeight(value: any): this;
    set webkitLogicalWidth(value: any);
    get webkitLogicalWidth(): any;
    setWebkitLogicalWidth(value: any): this;
    set webkitMarginAfter(value: any);
    get webkitMarginAfter(): any;
    setWebkitMarginAfter(value: any): this;
    set webkitMarginBefore(value: any);
    get webkitMarginBefore(): any;
    setWebkitMarginBefore(value: any): this;
    set webkitMarginEnd(value: any);
    get webkitMarginEnd(): any;
    setWebkitMarginEnd(value: any): this;
    set webkitMarginStart(value: any);
    get webkitMarginStart(): any;
    setWebkitMarginStart(value: any): this;
    set webkitMask(value: any);
    get webkitMask(): any;
    setWebkitMask(value: any): this;
    set webkitMaskBoxImage(value: any);
    get webkitMaskBoxImage(): any;
    setWebkitMaskBoxImage(value: any): this;
    set webkitMaskBoxImageOutset(value: any);
    get webkitMaskBoxImageOutset(): any;
    setWebkitMaskBoxImageOutset(value: any): this;
    set webkitMaskBoxImageRepeat(value: any);
    get webkitMaskBoxImageRepeat(): any;
    setWebkitMaskBoxImageRepeat(value: any): this;
    set webkitMaskBoxImageSlice(value: any);
    get webkitMaskBoxImageSlice(): any;
    setWebkitMaskBoxImageSlice(value: any): this;
    set webkitMaskBoxImageSource(value: any);
    get webkitMaskBoxImageSource(): any;
    setWebkitMaskBoxImageSource(value: any): this;
    set webkitMaskBoxImageWidth(value: any);
    get webkitMaskBoxImageWidth(): any;
    setWebkitMaskBoxImageWidth(value: any): this;
    set webkitMaskClip(value: any);
    get webkitMaskClip(): any;
    setWebkitMaskClip(value: any): this;
    set webkitMaskComposite(value: any);
    get webkitMaskComposite(): any;
    setWebkitMaskComposite(value: any): this;
    set webkitMaskImage(value: any);
    get webkitMaskImage(): any;
    setWebkitMaskImage(value: any): this;
    set webkitMaskOrigin(value: any);
    get webkitMaskOrigin(): any;
    setWebkitMaskOrigin(value: any): this;
    set webkitMaskPosition(value: any);
    get webkitMaskPosition(): any;
    setWebkitMaskPosition(value: any): this;
    set webkitMaskPositionX(value: any);
    get webkitMaskPositionX(): any;
    setWebkitMaskPositionX(value: any): this;
    set webkitMaskPositionY(value: any);
    get webkitMaskPositionY(): any;
    setWebkitMaskPositionY(value: any): this;
    set webkitMaskRepeat(value: any);
    get webkitMaskRepeat(): any;
    setWebkitMaskRepeat(value: any): this;
    set webkitMaskRepeatX(value: any);
    get webkitMaskRepeatX(): any;
    setWebkitMaskRepeatX(value: any): this;
    set webkitMaskRepeatY(value: any);
    get webkitMaskRepeatY(): any;
    setWebkitMaskRepeatY(value: any): this;
    set webkitMaskSize(value: any);
    get webkitMaskSize(): any;
    setWebkitMaskSize(value: any): this;
    set webkitMaxLogicalHeight(value: any);
    get webkitMaxLogicalHeight(): any;
    setWebkitMaxLogicalHeight(value: any): this;
    set webkitMaxLogicalWidth(value: any);
    get webkitMaxLogicalWidth(): any;
    setWebkitMaxLogicalWidth(value: any): this;
    set webkitMinLogicalHeight(value: any);
    get webkitMinLogicalHeight(): any;
    setWebkitMinLogicalHeight(value: any): this;
    set webkitMinLogicalWidth(value: any);
    get webkitMinLogicalWidth(): any;
    setWebkitMinLogicalWidth(value: any): this;
    set webkitOpacity(value: any);
    get webkitOpacity(): any;
    setWebkitOpacity(value: any): this;
    set webkitOrder(value: any);
    get webkitOrder(): any;
    setWebkitOrder(value: any): this;
    set webkitPaddingAfter(value: any);
    get webkitPaddingAfter(): any;
    setWebkitPaddingAfter(value: any): this;
    set webkitPaddingBefore(value: any);
    get webkitPaddingBefore(): any;
    setWebkitPaddingBefore(value: any): this;
    set webkitPaddingEnd(value: any);
    get webkitPaddingEnd(): any;
    setWebkitPaddingEnd(value: any): this;
    set webkitPaddingStart(value: any);
    get webkitPaddingStart(): any;
    setWebkitPaddingStart(value: any): this;
    set webkitPerspective(value: any);
    get webkitPerspective(): any;
    setWebkitPerspective(value: any): this;
    set webkitPerspectiveOrigin(value: any);
    get webkitPerspectiveOrigin(): any;
    setWebkitPerspectiveOrigin(value: any): this;
    set webkitPerspectiveOriginX(value: any);
    get webkitPerspectiveOriginX(): any;
    setWebkitPerspectiveOriginX(value: any): this;
    set webkitPerspectiveOriginY(value: any);
    get webkitPerspectiveOriginY(): any;
    setWebkitPerspectiveOriginY(value: any): this;
    set webkitPrintColorAdjust(value: any);
    get webkitPrintColorAdjust(): any;
    setWebkitPrintColorAdjust(value: any): this;
    set webkitRtlOrdering(value: any);
    get webkitRtlOrdering(): any;
    setWebkitRtlOrdering(value: any): this;
    set webkitRubyPosition(value: any);
    get webkitRubyPosition(): any;
    setWebkitRubyPosition(value: any): this;
    set webkitShapeImageThreshold(value: any);
    get webkitShapeImageThreshold(): any;
    setWebkitShapeImageThreshold(value: any): this;
    set webkitShapeMargin(value: any);
    get webkitShapeMargin(): any;
    setWebkitShapeMargin(value: any): this;
    set webkitShapeOutside(value: any);
    get webkitShapeOutside(): any;
    setWebkitShapeOutside(value: any): this;
    set webkitTapHighlightColor(value: any);
    get webkitTapHighlightColor(): any;
    setWebkitTapHighlightColor(value: any): this;
    set webkitTextCombine(value: any);
    get webkitTextCombine(): any;
    setWebkitTextCombine(value: any): this;
    set webkitTextDecorationsInEffect(value: any);
    get webkitTextDecorationsInEffect(): any;
    setWebkitTextDecorationsInEffect(value: any): this;
    set webkitTextEmphasis(value: any);
    get webkitTextEmphasis(): any;
    setWebkitTextEmphasis(value: any): this;
    set webkitTextEmphasisColor(value: any);
    get webkitTextEmphasisColor(): any;
    setWebkitTextEmphasisColor(value: any): this;
    set webkitTextEmphasisPosition(value: any);
    get webkitTextEmphasisPosition(): any;
    setWebkitTextEmphasisPosition(value: any): this;
    set webkitTextEmphasisStyle(value: any);
    get webkitTextEmphasisStyle(): any;
    setWebkitTextEmphasisStyle(value: any): this;
    set webkitTextFillColor(value: any);
    get webkitTextFillColor(): any;
    setWebkitTextFillColor(value: any): this;
    set webkitTextOrientation(value: any);
    get webkitTextOrientation(): any;
    setWebkitTextOrientation(value: any): this;
    set webkitTextSecurity(value: any);
    get webkitTextSecurity(): any;
    setWebkitTextSecurity(value: any): this;
    set webkitTextSizeAdjust(value: any);
    get webkitTextSizeAdjust(): any;
    setWebkitTextSizeAdjust(value: any): this;
    set webkitTextStroke(value: any);
    get webkitTextStroke(): any;
    setWebkitTextStroke(value: any): this;
    set webkitTextStrokeColor(value: any);
    get webkitTextStrokeColor(): any;
    setWebkitTextStrokeColor(value: any): this;
    set webkitTextStrokeWidth(value: any);
    get webkitTextStrokeWidth(): any;
    setWebkitTextStrokeWidth(value: any): this;
    set webkitTransform(value: any);
    get webkitTransform(): any;
    setWebkitTransform(value: any): this;
    set webkitTransformOrigin(value: any);
    get webkitTransformOrigin(): any;
    setWebkitTransformOrigin(value: any): this;
    set webkitTransformOriginX(value: any);
    get webkitTransformOriginX(): any;
    setWebkitTransformOriginX(value: any): this;
    set webkitTransformOriginY(value: any);
    get webkitTransformOriginY(): any;
    setWebkitTransformOriginY(value: any): this;
    set webkitTransformOriginZ(value: any);
    get webkitTransformOriginZ(): any;
    setWebkitTransformOriginZ(value: any): this;
    set webkitTransformStyle(value: any);
    get webkitTransformStyle(): any;
    setWebkitTransformStyle(value: any): this;
    set webkitTransition(value: any);
    get webkitTransition(): any;
    setWebkitTransition(value: any): this;
    set webkitTransitionDelay(value: any);
    get webkitTransitionDelay(): any;
    setWebkitTransitionDelay(value: any): this;
    set webkitTransitionDuration(value: any);
    get webkitTransitionDuration(): any;
    setWebkitTransitionDuration(value: any): this;
    set webkitTransitionProperty(value: any);
    get webkitTransitionProperty(): any;
    setWebkitTransitionProperty(value: any): this;
    set webkitTransitionTimingFunction(value: any);
    get webkitTransitionTimingFunction(): any;
    setWebkitTransitionTimingFunction(value: any): this;
    set webkitUserDrag(value: any);
    get webkitUserDrag(): any;
    setWebkitUserDrag(value: any): this;
    set webkitUserModify(value: any);
    get webkitUserModify(): any;
    setWebkitUserModify(value: any): this;
    set webkitUserSelect(value: any);
    get webkitUserSelect(): any;
    setWebkitUserSelect(value: any): this;
    set webkitWritingMode(value: any);
    get webkitWritingMode(): any;
    setWebkitWritingMode(value: any): this;
    set whiteSpace(value: any);
    get whiteSpace(): any;
    setWhiteSpace(value: any): this;
    set whiteSpaceCollapse(value: any);
    get whiteSpaceCollapse(): any;
    setWhiteSpaceCollapse(value: any): this;
    set widows(value: any);
    get widows(): any;
    setWidows(value: any): this;
    set width(value: any);
    get width(): any;
    setWidth(value: any): this;
    set willChange(value: any);
    get willChange(): any;
    setWillChange(value: any): this;
    set wordBreak(value: any);
    get wordBreak(): any;
    setWordBreak(value: any): this;
    set wordSpacing(value: any);
    get wordSpacing(): any;
    setWordSpacing(value: any): this;
    set wordWrap(value: any);
    get wordWrap(): any;
    setWordWrap(value: any): this;
    set writingMode(value: any);
    get writingMode(): any;
    setWritingMode(value: any): this;
    set x(value: any);
    get x(): any;
    setX(value: any): this;
    set y(value: any);
    get y(): any;
    setY(value: any): this;
    set zIndex(value: any);
    get zIndex(): any;
    setZIndex(value: any): this;
    set zoom(value: any);
    get zoom(): any;
    setZoom(value: any): this;
    variable(name: string, value?: any | null): any;
    private _updated;
    /**
     *
     * @param {props} props additional properties to add into the mix
     * @returns {Style}
     */
    extends(props: props, override?: boolean): Style<variableMap>;
    static trimRules(rules: props): Record<string, any>;
    static register(name: string, props: props): Style<Record<string, any>>;
    static fromElement(element: HTMLElement, name?: any): Style<Record<string, any>>;
    static fromWidget(widget: Widget, name?: any): Style<Record<string, any>>;
    static from(target: Widget | HTMLElement, name?: any): Style<Record<string, any>>;
    static copy<U = any>(target: Style<U> | string, name?: string | null, mode?: "simple" | "all", style?: Style<U> | null, update?: boolean): Style<Record<string, any>> | Style<U>;
    static extends<U = any>(target: Style<U>, props: props, name?: string | null, override?: boolean): Style<U>;
    static INHERIT: string;
    static AUTO: string;
    static FULL: string;
    static FULLWIDTH: string;
    static FULLHEIGHT: string;
    static WRAP: string;
    static NONE: string;
    static BLOCK: string;
    static FLEX: string;
    static GRID: string;
    static NOWRAP: string;
    static INITIAL: string;
    static UNSET: string;
    static CLIP: string;
    static HIDDEN: string;
    static VISIBLE: string;
    static UNIT: string;
    static HALFUNIT: string;
    static ONEANDHALFUNIT: string;
    static TWOUNITS: string;
    static THREEUNITS: string;
    static FOURUNITS: string;
    static FIVEUNITS: string;
    static BULKUNIT: string;
    static GRADIENT: {
        LEFT: string;
        RIGHT: string;
        TOP: string;
        BOTTOM: string;
    };
    static calc(...string: any[]): string;
    static var(string: any): string;
    static double(string: any): any;
    static linearGradient(...colors: any): string;
    static radialGradient(...colors: any): string;
    static deg(int: any): string;
    static em(int: any): string;
    static rem(int: any): string;
    static px(int: any): string;
    static p(int: any): string;
}
export default Style;
export type { props as styleProps };
